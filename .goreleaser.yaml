version: 2

before:
  hooks:
    # 构建前清理依赖
    - go mod tidy
    # 确认源码目录
    - ls -la
    # 创建必要的目录
    - mkdir -p config outputs reports templates

snapshot:

checksum:
  name_template: 'checksums.txt'
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - Merge pull request
      - Merge branch

builds:
  - id: stellar-autops
    main: .
    binary: stellar-autops
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}

archives:
  - id: stellar-autops
    name_template: "stellar-autops-v{{ .Version }}-{{ .Os }}-{{ .Arch }}"
    wrap_in_directory: false
    formats:
      - tar.gz
    format_overrides:
      - goos: windows
        formats:
          - zip
    files:
      - README.md
      - config/
      - outputs/
      - reports/
      - templates/

release:
  github:
    owner: caapap
    name: stellar-autops
  name_template: "v{{ .Version }}"
  draft: false
  replace_existing_artifacts: true
  mode: replace

dockers:
  # AMD64 架构
  - image_templates:
      - swr.cn-east-3.myhuaweicloud.com/caapap/stellar-autops:v{{ .Version }}-amd64
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
    extra_files:
      - config/
      - outputs/
      - reports/
      - templates/
  # ARM64 架构
  - image_templates:
      - swr.cn-east-3.myhuaweicloud.com/caapap/stellar-autops:v{{ .Version }}-arm64v8
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64/v8"
    extra_files:
      - config/
      - outputs/
      - reports/
      - templates/

# 注意：以下部分需要根据实际情况调整
# 这些部分通常用于构建 Docker 镜像的 manifest 列表
# 如果你不需要构建 Docker 镜像的 manifest 列表，可以忽略这部分
# 如果你需要构建 Docker 镜像的 manifest 列表，请确保在 GoReleaser 执行完成后通过其他方式处理
# 例如，使用 Docker 命令行工具手动处理
# 或者使用其他脚本自动处理
# 或者使用其他 CI/CD 工具自动处理 